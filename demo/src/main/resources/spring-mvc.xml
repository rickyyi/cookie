<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
    <mvc:annotation-driven validator="validator"/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!--<property name="basenames">
            <list>
                <value>classpath:messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>-->
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    <mvc:default-servlet-handler/>

    <!--<context:component-scan base-package="com.cookie.demo.controller.*" name-generator="cn.upenny.framework.spring.mvc.FullPackageBeanNameGenerator"/>-->
    <context:component-scan base-package="com.cookie.demo.controller.**"/>
    <!--<import resource="classpath*:applicationContext.xml"/>-->
    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
    <!--<mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class = "org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg name="defaultCharset" value="UTF-8"></constructor-arg>
            </bean>
            <bean class="cn.upenny.framework.convert.FastJsonHttpMessageConverter" >
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                        <value>PrettyFormat</value>
                        <value>WriteDateUseDateFormat</value>
                    </array>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>-->
    <!-- 拦截器  -->
    <!-- 多个拦截器,顺序执行 -->
    <!-- 如果不配置或/*,将拦截所有的Controller -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/api/*/*/**" />
            <bean class="cn.upenny.approve.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>-->
    <!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="cn.upenny.framework.convert.String2DateConverter" />
                <bean class="cn.upenny.framework.convert.Date2StringConverter" />
            </set>
        </property>
    </bean>-->
    <aop:aspectj-autoproxy />
    <!--<context:component-scan base-package="cn.upenny.approve.aop" />-->
    <!--<aop:aspectj-autoproxy/>
    <context:component-scan base-package="cn.upenny.approve.aspect" />
        <bean id="aspect" class="ExceptionAop" />
        -->
    <!--<bean name='requestMappingHandlerMapping'
          class='cn.upenny.framework.spring.mvc.PackageURLRequestMappingHandlerMapping'>
        <property name='packageBase' value='cn.upenny.approve.web'></property>
    </bean>-->


    <bean id="websocket" class="com.cookie.demo.websocket.SystemWebSocketHandler" />
    <websocket:handlers>
        <websocket:mapping path="/websocket" handler="websocket" />
        <websocket:handshake-interceptors>
            <bean class="com.cookie.demo.websocket.WebSocketHandshakeInterceptor" />
        </websocket:handshake-interceptors>
    </websocket:handlers>
</beans>
